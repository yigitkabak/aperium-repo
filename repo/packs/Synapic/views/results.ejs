<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Arama Sonuçları - Synapic Search</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --bg-primary: #121212;
            --bg-secondary: #1e1e1e;
            --bg-tertiary: #252525;
            --text-primary: #ffffff;
            --text-secondary: rgba(255, 255, 255, 0.7);
            --accent: #7289fd;
            --accent-hover: #5a6fd8;
            --accent-glow: rgba(114, 137, 253, 0.4);
            --button-bg: rgba(255, 255, 255, 0.08);
            --button-hover: rgba(255, 255, 255, 0.12);
            --button-active: rgba(114, 137, 253, 0.2);
            --border-color: rgba(255, 255, 255, 0.1);
            --shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
            --blur-bg: rgba(18, 18, 18, 0.8);
            --logo-filter: invert(100%) grayscale(100%);
        }
        .light-theme {
            --bg-primary: #f5f7fa;
            --bg-secondary: #ffffff;
            --bg-tertiary: #eaeef3;
            --text-primary: #1f2937;
            --text-secondary: rgba(31, 41, 55, 0.7);
            --accent: #6366f1;
            --accent-hover: #4f46e5;
            --accent-glow: rgba(99, 102, 241, 0.3);
            --button-bg: #eaeef3;
            --button-hover: #dfe3eb;
            --button-active: rgba(99, 102, 241, 0.2);
            --border-color: rgba(0, 0, 0, 0.1);
            --shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            --blur-bg: rgba(245, 247, 250, 0.8);
            --logo-filter: none;
        }
        body {
            background-color: var(--bg-primary);
            color: var(--text-primary);
            font-family: 'Inter', sans-serif;
            background-image: radial-gradient(circle at top right, rgba(114, 137, 253, 0.08), transparent 40%),
                            radial-gradient(circle at bottom left, rgba(114, 137, 253, 0.05), transparent 30%);
            min-height: 100vh;
            overflow-y: scroll;
        }
        .light-theme body {
            background-image: radial-gradient(circle at top right, rgba(99, 102, 241, 0.05), transparent 40%),
                            radial-gradient(circle at bottom left, rgba(99, 102, 241, 0.03), transparent 30%);
        }
        .result-card {
            background: var(--bg-secondary);
            border-radius: 12px;
            box-shadow: var(--shadow);
            transition: transform 0.2s ease, background-color 0.2s ease;
            border: 1px solid var(--border-color);
            overflow: hidden;
        }
         .result-card > a:first-child {
             display: block;
         }
        .result-card:not(.result-card > a:first-child):hover {
             background: var(--bg-tertiary);
             transform: translateY(-2px);
        }

        .image-result {
            border: 1px solid var(--border-color);
            transition: all 0.2s ease;
            background: var(--bg-secondary);
            border-radius: 8px;
        }
        .image-result:hover {
            transform: scale(1.03);
            border-color: var(--accent);
        }
        #searchFormContainer {
            position: relative;
        }
        .search-box-container {
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            box-shadow: var(--shadow);
            transition: border-color 0.2s ease;
            z-index: 20;
            position: relative;
        }
        .search-box-container:focus-within {
            border-color: var(--accent);
        }
        #suggestionsList {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-top: none;
            border-radius: 0 0 12px 12px;
            box-shadow: var(--shadow);
            z-index: 10;
            overflow-y: auto;
            max-height: 250px;
            list-style: none;
            padding: 0;
            margin: 0 auto;
            max-width: calc(100% - 2rem);
            width: max-content;
             min-width: 300px;
        }
         @media (min-width: 640px) {
            #suggestionsList {
                 max-width: calc(48rem - 2rem);
                 min-width: 400px;
            }
         }
         @media (min-width: 768px) {
             #suggestionsList {
                 max-width: calc(48rem - 2rem);
             }
         }
        #suggestionsList li {
            padding: 10px 20px;
            cursor: pointer;
            border-bottom: 1px solid var(--border-color);
            color: var(--text-primary);
            transition: background-color 0.2s;
        }
        #suggestionsList li:last-child {
            border-bottom: none;
        }
        #suggestionsList li:hover,
        #suggestionsList li.selected {
            background-color: var(--button-hover);
        }
        .active-tab {
            background: var(--accent) !important;
            color: white !important;
            border-color: var(--accent) !important;
        }
        .active-tab i {
            color: white !important;
        }
        .pagination a, .pagination span {
            padding: 8px 16px;
            margin: 0 5px;
            border-radius: 8px;
            text-decoration: none;
            color: var(--text-secondary);
            background-color: var(--button-bg);
            border: 1px solid var(--border-color);
            transition: background-color 0.2s, color 0.2s;
            font-size: 0.875rem;
        }
        .pagination a:hover {
            background-color: var(--button-hover);
            color: var(--text-primary);
        }
        .pagination .current {
            background-color: var(--accent);
            color: white;
            border-color: var(--accent);
            font-weight: 600;
        }
         .modal {
            background: var(--blur-bg);
            backdrop-filter: blur(12px);
            -webkit-backdrop-filter: blur(12px);
            display: none;
            position: fixed;
            inset: 0;
            z-index: 50;
        }
        .synapic-logo {
          font-size: 28px;
          font-weight: 800;
          letter-spacing: -2px;
          text-shadow: 0 2px 5px rgba(0,0,0,0.15);
        }
        .synapic-logo span:nth-child(1) { color: #4285f4; }
        .synapic-logo span:nth-child(2) { color: #ea4335; }
        .synapic-logo span:nth-child(3) { color: #fbbc05; }
        .synapic-logo span:nth-child(4) { color: #4285f4; }
        .synapic-logo span:nth-child(5) { color: #34a853; }
        .synapic-logo span:nth-child(6) { color: #ea4335; }
        .synapic-logo span:nth-child(7) { color: #4285f4; }
        .prose { color: var(--text-secondary); }
        .prose h1, .prose h2, .prose h3, .prose h4, .prose strong { color: var(--text-primary); }
        .prose a { color: var(--accent); }
        .prose a:hover { color: var(--accent-hover); }
        .light-theme .prose { color: var(--text-secondary); }
        .light-theme .prose h1, .light-theme .prose h2, .light-theme .prose h3, .light-theme .prose h4, .light-theme .prose strong { color: var(--text-primary); }
        .light-theme .prose a { color: var(--accent); }
        .light-theme .prose a:hover { color: var(--accent-hover); }
        button i { color: inherit; }
        .external-logos img {
            height: 32px;
            filter: var(--logo-filter);
            transition: transform 0.2s ease;
        }
         .light-theme .external-logos img {
             filter: none;
         }
         .external-logos a:hover img {
            transform: scale(1.1);
         }
        @media (max-width: 640px) {
            .synapic-logo { font-size: 24px; letter-spacing: -1.5px; }
            .search-input { font-size: 16px; padding: 12px 16px; }
            .pagination a, .pagination span { padding: 6px 12px; margin: 0 3px; font-size: 0.75rem; }
             .external-logos img { height: 24px; }
        }
         .tab-row {
             display: flex;
             flex-wrap: wrap;
             justify-content: center;
             gap: 8px;
         }
         .tab-divider {
             margin: 16px auto;
             height: 1px;
             background-color: var(--border-color);
             width: 100%;
             max-width: 700px;
         }
         .news-image {
             aspect-ratio: 16 / 9;
         }
         @media (min-width: 640px) {
             .news-image {
                 aspect-ratio: auto;
                 width: 8rem;
             }
         }
         @media (min-width: 768px) {
             .news-image {
                 width: 10rem;
             }
         }

    </style>
</head>
<body class="min-h-screen">
    <nav class="sticky top-0 bg-[var(--bg-primary)] border-b border-[var(--border-color)] backdrop-blur-lg z-40">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex items-center justify-between h-16">
                <a href="/" class="flex items-center space-x-2">
                  <div class="logo-container">
                      <div class="synapic-logo">
                        <span>S</span><span>y</span><span>n</span><span>a</span><span>p</span><span>i</span><span>c</span>
                      </div>
                  </div>
                </a>
                <div class="flex items-center space-x-2 sm:space-x-4">
                    <button id="themeToggle" class="p-2 rounded-full hover:bg-[var(--button-bg)] transition-colors text-[var(--accent)] text-lg" aria-label="Toggle Theme">
                        <i class="fa-solid fa-moon"></i> </button>
                </div>
            </div>
        </div>
    </nav>
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-8">
        <form method="GET" action="/search" class="mb-6 sm:mb-8" id="searchForm">
            <div id="searchFormContainer" class="max-w-3xl mx-auto relative">
                <div class="search-box-container rounded-full p-1 sm:p-2">
                    <div class="flex items-center">
                        <input type="text"
                               name="query"
                               id="queryInput" value="<%= query %>"
                               placeholder="Synapic'ta ara..."
                               class="search-input w-full bg-transparent outline-none px-3 sm:px-5 py-2 text-sm sm:text-base text-[var(--text-primary)] placeholder-[var(--text-secondary)]"
                               autocomplete="off" aria-label="Arama Sorgusu">
                        <button type="submit" class="p-2 rounded-full hover:bg-[var(--button-hover)] transition-colors mr-1" aria-label="Ara">
                            <i class="fa-solid fa-search text-[var(--text-secondary)] text-base sm:text-lg"></i>
                        </button>
                    </div>
                </div>
                 <ul id="suggestionsList" class="hidden"></ul>
            </div>

            <div class="tab-row mt-4 sm:mt-5">
                 <%
                    const searchTabs = [
                        { id: 'web', name: 'Web', icon: 'fa-solid fa-globe' },
                        { id: 'image', name: 'Görseller', icon: 'fa-solid fa-image' },
                        { id: 'wiki', name: 'Wiki', icon: 'fa-brands fa-wikipedia-w' },
                        { id: 'video', name: 'Videolar', icon: 'fa-solid fa-video' },
                        { id: 'news', name: 'Haberler', icon: 'fa-solid fa-newspaper' }
                    ];
                 %>
                 <% searchTabs.forEach(tabInfo => { %>
                    <button type="submit"
                            name="type"
                            value="<%= tabInfo.id %>"
                            class="px-3 py-1.5 sm:px-4 sm:py-2 rounded-full border text-xs sm:text-sm font-medium transition-all
                                   <%= type === tabInfo.id ? 'active-tab' : 'border-[var(--border-color)] text-[var(--text-secondary)] hover:border-[var(--accent)] hover:text-[var(--accent)] bg-[var(--button-bg)] hover:bg-[var(--button-hover)]' %>">
                       <i class="<%= tabInfo.icon %> mr-1.5 opacity-80"></i>
                        <%= tabInfo.name %>
                    </button>
                <% }) %>
            </div>

            <div class="tab-divider"></div>

             <% if (type === 'web') { %>
                 <input type="hidden" name="start" value="<%= start %>">
             <% } else { %>
                 <input type="hidden" name="start" value="0">
             <% } %>


        </form>

        <% if (errorMessage) { %>
             <div class="max-w-3xl mx-auto p-4 sm:p-5 bg-red-900/20 border border-red-700/50 text-red-400 rounded-lg mb-6 sm:mb-8" role="alert">
                 <i class="fa-solid fa-circle-exclamation mr-2"></i> <%= errorMessage %>
             </div>
        <% } %>


        <div class="space-y-4 sm:space-y-6">
            <%
                const showPrimaryWebPagination = (type === 'web');
            %>
            <% if (type === 'web' && results && results.length > 0) { %>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-3 sm:gap-4">
                    <% results.forEach(item => { %>
                        <div class="result-card">
                           <a href="<%= item.link %>"
                              target="_blank" rel="noopener noreferrer"
                              class="block p-4 sm:p-5 hover:bg-[var(--bg-tertiary)] rounded-lg transition-colors">
                                <div class="flex items-start mb-1.5">
                                    <div class="flex-1">
                                        <h3 class="font-semibold text-[var(--accent)] text-base sm:text-lg leading-tight hover:underline">
                                            <%= item.title %>
                                        </h3>
                                    </div>
                                     <% if ((item.link || '').toLowerCase().endsWith('.pdf')) { %>
                                        <span class="ml-2 mt-0.5 px-2 py-0.5 rounded-full bg-[var(--accent)]/10 text-[var(--accent)] font-medium text-[10px] sm:text-xs inline-block border border-[var(--accent)]/20 flex-shrink-0">
                                        PDF
                                        </span>
                                    <% } %>
                                </div>
                                <p class="text-xs sm:text-sm text-[var(--text-secondary)] mb-2 leading-relaxed">
                                    <%= item.snippet || 'Özet bulunamadı.' %>
                                </p>
                                <p class="text-[10px] sm:text-xs text-[var(--text-secondary)]/70 truncate"><%= item.displayUrl || item.link %></p>
                           </a>
                        </div>
                    <% }) %>
                </div>
                 <%
                    const itemsPerPageWeb = 10;
                    const currentPageWeb = Math.floor(start / itemsPerPageWeb) + 1;
                    const prevStartWeb = Math.max(0, start - itemsPerPageWeb);
                    const nextStartWeb = start + itemsPerPageWeb;
                    const showNextWeb = results && results.length === itemsPerPageWeb;
                 %>
                 <% if (showNextWeb || start > 0) { %>
                    <div class="pagination flex justify-center mt-6 sm:mt-8">
                        <% if (start > 0) { %>
                            <a href="/search?query=<%= encodeURIComponent(query) %>&type=<%= type %>&start=<%= prevStartWeb %>"><i class="fa-solid fa-arrow-left mr-1.5"></i>Önceki</a>
                        <% } %>
                        <% if (showNextWeb || start > 0) { %>
                            <span class="current"><%= currentPageWeb %></span>
                        <% } %>
                        <% if (showNextWeb) { %>
                            <a href="/search?query=<%= encodeURIComponent(query) %>&type=<%= type %>&start=<%= nextStartWeb %>">Sonraki<i class="fa-solid fa-arrow-right ml-1.5"></i></a>
                        <% } %>
                    </div>
                <% } %>
            <% } %>

            <% if (type === 'image' && images && images.length > 0) { %>
                <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-2 sm:gap-3">
                    <% images.forEach(img => { %>
                        <div class="image-result rounded-lg overflow-hidden cursor-pointer aspect-square"
                             onclick="openModal('<%= img.image %>', '<%= img.title || 'Görsel' %>')"
                             role="button" aria-label="Görseli Büyüt">
                            <img src="<%= img.thumbnail || img.image %>"
                                 alt="<%= img.title || 'Resim' %>"
                                 loading="lazy"
                                 class="w-full h-full object-cover transition-transform duration-200 hover:scale-105">
                        </div>
                    <% }) %>
                </div>
                 <%
                    const itemsPerPageImage = 20;
                     const prevStartImg = Math.max(0, start - itemsPerPageImage);
                     const nextStartImg = start + itemsPerPageImage;
                     const showNextImage = type === 'image' && images && images.length === itemsPerPageImage;
                 %>
                 <% if (showNextImage || start > 0) { %>
                     <div class="pagination flex justify-center mt-6 sm:mt-8">
                         <% if (start > 0) { %>
                            <a href="/search?query=<%= encodeURIComponent(query) %>&type=<%= type %>&start=<%= prevStartImg %>"><i class="fa-solid fa-arrow-left mr-1.5"></i>Önceki</a>
                         <% } %>
                         <% if (showNextImage || start > 0) { %>
                            <span class="current"><%= Math.floor(start / itemsPerPageImage) + 1 %></span>
                         <% } %>
                         <% if (showNextImage) { %>
                             <a href="/search?query=<%= encodeURIComponent(query) %>&type=<%= type %>&start=<%= nextStartImg %>">Sonraki<i class="fa-solid fa-arrow-right ml-1.5"></i></a>
                         <% } %>
                     </div>
                 <% } %>
            <% } %>

            <% if (type === 'wiki' && wiki) { %>
                <div class="result-card p-4 sm:p-6 max-w-3xl mx-auto border-l-4 border-[var(--accent)]">
                    <div class="flex items-center mb-3 sm:mb-4">
                        <i class="fa-brands fa-wikipedia-w text-xl sm:text-2xl text-[var(--accent)] mr-2 sm:mr-3"></i>
                        <h1 class="text-xl sm:text-2xl font-bold text-[var(--text-primary)]"><%= wiki.title %></h1>
                    </div>
                    <% if (wiki.img) { %>
                        <img src="<%= wiki.img %>"
                             alt="<%= wiki.title %>"
                             class="w-full max-h-60 sm:max-h-72 object-cover rounded-lg mb-4 sm:mb-5 border border-[var(--border-color)]">
                    <% } %>
                    <div class="prose max-w-none text-sm sm:text-base leading-relaxed">
                        <p><%= wiki.summary %></p> </div>
                    <a href="<%= wiki.url %>"
                       target="_blank" rel="noopener noreferrer"
                       class="inline-flex items-center mt-4 sm:mt-5 text-[var(--accent)] hover:text-[var(--accent-hover)] hover:underline text-sm sm:text-base font-medium group">
                        Vikipedi'de Devamını Oku
                        <i class="fa-solid fa-arrow-right ml-1.5 transform transition-transform duration-200 group-hover:translate-x-1"></i>
                    </a>
                </div>
            <% } %>

            <% if (type === 'video' && videos && videos.length > 0) { %>
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4">
                    <% videos.forEach(video => { %>
                        <div class="result-card flex flex-col">
                            <a href="<%= video.url %>" target="_blank" rel="noopener noreferrer" class="block hover:bg-[var(--bg-tertiary)] rounded-lg transition-colors duration-200 flex-grow">
                                <div class="video-thumbnail relative aspect-video overflow-hidden rounded-t-lg">
                                    <img src="<%= video.thumbnail %>" alt="<%= video.title %>" loading="lazy" class="w-full h-full object-cover">
                                     <div class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-20 opacity-0 hover:opacity-100 transition-opacity duration-200">
                                        <i class="fa-solid fa-play text-white text-3xl"></i>
                                    </div>
                                </div>
                                <div class="p-4 sm:p-5">
                                    <h3 class="font-semibold text-[var(--text-primary)] text-base sm:text-lg mb-1 hover:text-[var(--accent)] leading-tight"><%= video.title %></h3>
                                    <% if (video.source) { %>
                                        <p class="video-source text-xs sm:text-sm text-[var(--text-secondary)]"><%= video.source %></p>
                                    <% } %>
                                </div>
                           </a>
                        </div>
                    <% }); %>
                </div>
                 <%
                     const itemsPerPageVideo = 10;
                     const prevStartVideo = Math.max(0, start - itemsPerPageVideo);
                     const nextStartVideo = start + itemsPerPageVideo;
                     const showNextVideo = type === 'video' && videos && videos.length === itemsPerPageVideo;
                 %>
                 <% if (showNextVideo || start > 0) { %>
                     <div class="pagination flex justify-center mt-6 sm:mt-8">
                         <% if (start > 0) { %>
                            <a href="/search?query=<%= encodeURIComponent(query) %>&type=<%= type %>&start=<%= prevStartVideo %>"><i class="fa-solid fa-arrow-left mr-1.5"></i>Önceki</a>
                         <% } %>
                         <% if (showNextVideo || start > 0) { %>
                            <span class="current"><%= Math.floor(start / itemsPerPageVideo) + 1 %></span>
                         <% } %>
                         <% if (showNextVideo) { %>
                             <a href="/search?query=<%= encodeURIComponent(query) %>&type=<%= type %>&start=<%= nextStartVideo %>">Sonraki<i class="fa-solid fa-arrow-right ml-1.5"></i></a>
                         <% } %>
                     </div>
                 <% } %>
            <% } %>

            <% if (type === 'news' && newsResults && newsResults.length > 0) { %>
                 <div class="grid grid-cols-1 md:grid-cols-2 gap-3 sm:gap-4">
                     <% newsResults.forEach(newsItem => { %>
                         <div class="result-card flex flex-col sm:flex-row">
                             <% if (newsItem.image) { %>
                                 <a href="<%= newsItem.link %>" target="_blank" rel="noopener noreferrer" class="flex-shrink-0 w-full sm:w-32 md:w-40 news-image overflow-hidden rounded-t-lg sm:rounded-t-none sm:rounded-l-lg">
                                     <img src="<%= newsItem.image %>" alt="<%= newsItem.title %>" loading="lazy" class="w-full h-full object-cover">
                                 </a>
                             <% } %>
                             <div class="p-4 sm:p-5 flex-grow flex flex-col justify-between">
                                 <a href="<%= newsItem.link %>" target="_blank" rel="noopener noreferrer" class="block">
                                     <h3 class="font-semibold text-[var(--text-primary)] text-base sm:text-lg mb-1 hover:text-[var(--accent)] leading-tight">
                                         <%= newsItem.title %>
                                     </h3>
                                     <p class="text-xs sm:text-sm text-[var(--text-secondary)] mb-2 leading-relaxed">
                                         <%= newsItem.snippet || 'Özet bulunamadı.' %>
                                     </p>
                                 </a>
                                 <p class="text-[10px] sm:text-xs text-[var(--text-secondary)]/70 truncate mt-auto">
                                     <%= newsItem.source %> -
                                     <%
                                        let formattedDate = newsItem.date;
                                        try {
                                            const date = new Date(newsItem.date);
                                            if (!isNaN(date.getTime())) {
                                                formattedDate = date.toLocaleDateString('tr-TR', { year: 'numeric', month: 'long', day: 'numeric' });
                                            }
                                        } catch (e) {
                                        }
                                     %>
                                     <%= formattedDate %>
                                 </p>
                             </div>
                         </div>
                     <% }) %>
                 </div>
            <% } %>


            <%
                let noResultsFound = false;
                if (query) {
                    if (type === 'web' && (!results || results.length === 0)) { noResultsFound = true; }
                    else if (type === 'image' && (!images || images.length === 0)) { noResultsFound = true; }
                    else if (type === 'wiki' && !wiki) { noResultsFound = true; }
                    else if (type === 'video' && (!videos || videos.length === 0)) { noResultsFound = true; }
                    else if (type === 'news' && (!newsResults || newsResults.length === 0)) { noResultsFound = true; }

                    if (errorMessage) {
                        noResultsFound = false;
                    }
                }
             %>
             <% if (noResultsFound) { %>
                <div class="text-center py-16 sm:py-24 text-[var(--text-secondary)]">
                    <i class="fa-solid fa-compass mb-4 text-4xl sm:text-5xl opacity-50"></i>
                     <% if (type === 'web') { %>
                        <p class="text-base sm:text-lg font-medium text-[var(--text-primary)]">"<%= query %>" için web sonucu bulunamadı.</p>
                    <% } else if (type === 'image') { %>
                         <p class="text-base sm:text-lg font-medium text-[var(--text-primary)]">"<%= query %>" için görsel sonucu bulunamadı.</p>
                    <% } else if (type === 'wiki') { %>
                         <p class="text-base sm:text-lg font-medium text-[var(--text-primary)]">"<%= query %>" için Wikipedia sonucu bulunamadı.</p>
                    <% } else if (type === 'video') { %>
                         <p class="text-base sm:text-lg font-medium text-[var(--text-primary)]">"<%= query %>" için video sonucu bulunamadı.</p>
                    <% } else if (type === 'news') { %>
                         <p class="text-base sm:text-lg font-medium text-[var(--text-primary)]">"<%= query %>" için haber sonucu bulunamadı.</p>
                    <% } %>

                    <p class="text-sm sm:text-base mt-1 mb-6">Başka bir arama türünü veya farklı bir arama motorunu deneyebilirsiniz.</p>
                    <p class="text-sm sm:text-base mt-1">Aramayı farklı motorlarda deneyebilirsiniz:</p>
                     <div class="external-logos flex justify-center items-center gap-6 mt-6">
                        <a href="https://www.google.com/search?q=<%= encodeURIComponent(query) %>" target="_blank" title="Google'da Ara">
                            <img src="https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png" alt="Google Logo">
                        </a>
                        <a href="https://www.bing.com/search?q=<%= encodeURIComponent(query) %>" target="_blank" title="Bing'de Ara">
                             <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Bing_logo_%282016%29.svg/320px-Bing_logo_%282016%29.svg.png" alt="Bing Logo" style="height:28px;">
                        </a>
                        <a href="https://duckduckgo.com/?q=<%= encodeURIComponent(query) %>" target="_blank" title="DuckDuckGo'da Ara">
                            <img src="https://external-content.duckduckgo.com/ip3/duckduckgo.com.ico" alt="DuckDuckGo Logo" style="height:28px;">
                        </a>
                    </div>
                </div>
            <% } %>

            <%
                let currentPageStatus = 1;
                let itemsPerPageStatus = 10;
                if (type === 'image') itemsPerPageStatus = 20;

                if (type === 'web' || type === 'image' || type === 'video') {
                     currentPageStatus = Math.floor(start / itemsPerPageStatus) + 1;
                 }
            %>
            <% if (!errorMessage && (results?.length > 0 || images?.length > 0 || videos?.length > 0 || newsResults?.length > 0 || wiki)) { %>
                <div class="text-center text-[var(--text-secondary)] text-sm mt-8">
                     <% if (type === 'web' || type === 'image' || type === 'video') 
                     %>
                </div>
            <% } %>
        </div>
    </main>

    <div id="imageModal" class="modal items-center justify-center" onclick="closeModalOnClickOutside(event)">
         <div class="relative max-w-[95%] sm:max-w-4xl w-auto p-2 sm:p-4" onclick="event.stopPropagation()">
             <img id="modalImage" class="rounded-lg shadow-xl max-h-[75vh] sm:max-h-[85vh] mx-auto object-contain block border-2 border-[var(--bg-tertiary)]" alt="Arama Görseli">
              <button onclick="closeModal()"
                    class="absolute top-2 right-2 sm:top-3 sm:right-3 p-2 rounded-full bg-[var(--bg-secondary)]/80 hover:bg-[var(--bg-tertiary)] text-[var(--text-primary)] transition-colors z-10 leading-none" aria-label="Kapat">
                <i class="fa-solid fa-xmark text-xl"></i>
            </button>
            <p id="imageUrl" class="text-center text-xs text-[var(--text-secondary)] mt-2 truncate px-4 break-all"></p>
        </div>
    </div>

    <script>
        const themeToggle = document.getElementById('themeToggle');
        const themeIcon = themeToggle.querySelector('i');
        let isDark = localStorage.getItem('theme') === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches);
        function applyTheme(dark) {
            if (dark) {
                document.body.classList.remove('light-theme');
                themeIcon.classList.remove('fa-sun');
                themeIcon.classList.add('fa-moon');
                localStorage.setItem('theme', 'dark');
            } else {
                document.body.classList.add('light-theme');
                themeIcon.classList.remove('fa-moon');
                themeIcon.classList.add('fa-sun');
                localStorage.setItem('theme', 'light');
            }
        }
        applyTheme(isDark);

        const imageModal = document.getElementById('imageModal');
        const modalImage = document.getElementById('modalImage');
        const imageUrlText = document.getElementById('imageUrl');

        function openModal(src, altText = 'Görsel') {
            modalImage.src = src;
            modalImage.alt = altText;
            imageUrlText.textContent = src.replace(/^https?:\/\//, '').split('?')[0];
            imageModal.style.display = 'flex';
            document.body.style.overflow = 'hidden';
        }

        function closeModal() {
            imageModal.style.display = 'none';
            modalImage.src = '';
            modalImage.alt = '';
            imageUrlText.textContent = '';
            document.body.style.overflow = '';
        }

        function closeModalOnClickOutside(event) {
            if (event.target === imageModal) {
                closeModal();
            }
        }

        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && imageModal.style.display === 'flex') {
                closeModal();
            }
        });

        const queryInput = document.getElementById('queryInput');
        const suggestionsList = document.getElementById('suggestionsList');
        const searchForm = document.getElementById('searchForm');
        let selectedSuggestionIndex = -1;

        async function fetchSuggestions(query) {
            if (query.length < 2) return [];
            const dummySuggestions = [
                 `${query} nedir`, `${query} nasıl yapılır`, `${query} yorumları`,
                 `${query} son dakika`, `${query} haberleri`, `${query} fiyatları`,
                 "hava durumu istanbul", "dolar kuru canlı", "euro kuru canlı",
                 "yapay zeka haberleri", "teknoloji haberleri", "spor haberleri",
                 "güncel olaylar türkiye", "synapic search manifesto", "en iyi arama motorları"
            ];
             const relevantSuggestions = dummySuggestions
                .filter(s => s.toLowerCase().includes(query.toLowerCase()))
                .sort((a, b) => {
                     const aStarts = a.toLowerCase().startsWith(query.toLowerCase());
                     const bStarts = b.toLowerCase().startsWith(query.toLowerCase());
                     if (aStarts && !bStarts) return -1;
                     if (!aStarts && bStarts) return 1;
                     return a.length - b.length;
                 });

            const exactMatchIndex = relevantSuggestions.findIndex(s => s.toLowerCase() === query.toLowerCase());
            if (exactMatchIndex !== -1) {
                const exactMatch = relevantSuggestions[exactMatchIndex];
                relevantSuggestions.splice(exactMatchIndex, 1);
                relevantSuggestions.unshift(exactMatch);
            }


            return relevantSuggestions.slice(0, 8);
        }

        function displaySuggestions(suggestions) {
            suggestionsList.innerHTML = '';
            if (suggestions.length === 0) { suggestionsList.classList.add('hidden'); return; }

            suggestions.forEach((suggestion, index) => {
                const li = document.createElement('li');
                li.textContent = suggestion;
                li.dataset.index = index;
                li.addEventListener('mousedown', (e) => {
                    e.preventDefault();
                    queryInput.value = suggestion;
                    suggestionsList.classList.add('hidden');
                    searchForm.submit();
                });
                suggestionsList.appendChild(li);
            });
            suggestionsList.classList.remove('hidden');
            selectedSuggestionIndex = -1;
        }

        let debounceTimer;
        queryInput.addEventListener('input', () => {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(async () => {
                const query = queryInput.value.trim();
                if (query.length > 0) {
                    const suggestions = await fetchSuggestions(query);
                    displaySuggestions(suggestions);
                } else {
                    suggestionsList.classList.add('hidden');
                }
                 selectedSuggestionIndex = -1;
                 delete queryInput.dataset.originalQuery;
            }, 250);
        });

        queryInput.addEventListener('focus', async () => {
             const query = queryInput.value.trim();
             if (query.length > 0 && suggestionsList.classList.contains('hidden')) {
                 const suggestions = await fetchSuggestions(query);
                 displaySuggestions(suggestions);
             } else if (suggestionsList.children.length > 0) {
                 suggestionsList.classList.remove('hidden');
             }
         });

        queryInput.addEventListener('blur', () => {
             setTimeout(() => {
                 suggestionsList.classList.add('hidden');
                 if (selectedSuggestionIndex > -1) {
                      const items = suggestionsList.querySelectorAll('li');
                      if (items[selectedSuggestionIndex]) items[selectedSuggestionIndex].classList.remove('selected');
                 }
                 selectedSuggestionIndex = -1;
                 delete queryInput.dataset.originalQuery;
             }, 150);
         });


        queryInput.addEventListener('keydown', (e) => {
            const items = suggestionsList.querySelectorAll('li');

            if (items.length === 0 && e.key !== 'Enter' && e.key !== 'Escape') return;

             if (selectedSuggestionIndex === -1 && (e.key === 'ArrowDown' || e.key === 'ArrowUp')) {
                 if (queryInput.dataset.originalQuery === undefined) {
                     queryInput.dataset.originalQuery = queryInput.value;
                 }
            }

            if (e.key === 'ArrowDown') {
                e.preventDefault();
                if (selectedSuggestionIndex < items.length - 1) {
                    if (selectedSuggestionIndex >= 0) items[selectedSuggestionIndex].classList.remove('selected');
                    selectedSuggestionIndex++;
                    items[selectedSuggestionIndex].classList.add('selected');
                    queryInput.value = items[selectedSuggestionIndex].textContent;
                     items[selectedSuggestionIndex].scrollIntoView({ block: 'nearest', behavior: 'smooth' });
                }
            } else if (e.key === 'ArrowUp') {
                e.preventDefault();
                if (selectedSuggestionIndex > 0) {
                    items[selectedSuggestionIndex].classList.remove('selected');
                    selectedSuggestionIndex--;
                    items[selectedSuggestionIndex].classList.add('selected');
                    queryInput.value = items[selectedSuggestionIndex].textContent;
                     items[selectedSuggestionIndex].scrollIntoView({ block: 'nearest', behavior: 'smooth' });
                } else if (selectedSuggestionIndex === 0) {
                    items[selectedSuggestionIndex].classList.remove('selected');
                    selectedSuggestionIndex = -1;
                    queryInput.value = queryInput.dataset.originalQuery || '';
                    delete queryInput.dataset.originalQuery;
                 }
                 else if (selectedSuggestionIndex === -1 && queryInput.dataset.originalQuery !== undefined) {
                      queryInput.value = queryInput.dataset.originalQuery;
                      delete queryInput.dataset.originalQuery;
                 }

            } else if (e.key === 'Enter') {
                if (selectedSuggestionIndex > -1 && items[selectedSuggestionIndex]) {
                     e.preventDefault();
                     queryInput.value = items[selectedSuggestionIndex].textContent;
                     suggestionsList.classList.add('hidden');
                     delete queryInput.dataset.originalQuery;
                     searchForm.submit();
                } else {
                    suggestionsList.classList.add('hidden');
                     delete queryInput.dataset.originalQuery;
                }
            } else if (e.key === 'Escape') {
                 suggestionsList.classList.add('hidden');
                 if (selectedSuggestionIndex > -1) {
                      const items = suggestionsList.querySelectorAll('li');
                      if (items[selectedSuggestionIndex]) items[selectedSuggestionIndex].classList.remove('selected');
                 }
                 selectedSuggestionIndex = -1;
                 if (queryInput.dataset.originalQuery !== undefined) {
                     queryInput.value = queryInput.dataset.originalQuery;
                     delete queryInput.dataset.originalQuery;
                 }
            } else {
                 if (selectedSuggestionIndex > -1) {
                     const items = suggestionsList.querySelectorAll('li');
                     if (items[selectedSuggestionIndex]) items[selectedSuggestionIndex].classList.remove('selected');
                     selectedSuggestionIndex = -1;
                     delete queryInput.dataset.originalQuery;
                 }
            }
        });

        const tabButtons = document.querySelectorAll('.tab-row button[type="submit"]');
        tabButtons.forEach(button => {
            button.addEventListener('click', function(event) {
                searchForm.query.value = queryInput.value;
            });
        });

    </script>
</body>
</html>
