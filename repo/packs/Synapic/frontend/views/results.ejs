<!DOCTYPE html>
<html lang="en">
 <head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <title>
    <%= query %> - Synapic Search
  </title>
  <script src="https://cdn.tailwindcss.com">
  </script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet"/>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&amp;display=swap" rel="stylesheet"/>
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background-color: #000000;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      overflow-x: hidden;
    }
    .result-link:hover {
        text-decoration: underline;
    }
    .overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.7);
      z-index: 1000;
      display: flex;
      opacity: 0;
      visibility: hidden;
      transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
    }
    .overlay.is-active {
      opacity: 1;
      visibility: visible;
    }

    #controlCenterOverlay {
        align-items: flex-start;
        justify-content: flex-end;
        background: transparent;
    }

    #controlCenterOverlay .overlay-content {
        position: absolute;
        top: 0;
        right: 0;
        height: 100%;
        width: 320px;
        background: linear-gradient(180deg, #1a1a1a 0%, #0d0d0d 100%);
        box-shadow: -8px 0 30px rgba(0, 0, 0, 0.7);
        transform: translateX(100%);
        transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1);
        opacity: 1;
        display: flex;
        flex-direction: column;
        padding: 1.5rem;
        color: white;
        text-align: left;
        overflow-y: auto;
        border-left: 1px solid #333;
        justify-content: flex-start;
        align-items: flex-start;
    }

    #controlCenterOverlay.is-active .overlay-content {
        transform: translateX(0);
    }

    #controlCenterOverlay .overlay-close {
        position: absolute;
        top: 1rem;
        right: 1.5rem;
        color: #999;
        cursor: pointer;
        z-index: 1001;
        background: none;
        border: none;
        padding: 0;
        transition: color 0.2s ease-in-out;
    }
    #controlCenterOverlay .overlay-close:hover {
        color: #007aff;
    }
    #controlCenterOverlay .overlay-close i {
        font-size: 2rem;
    }

    .slide-from-right-overlay .overlay-content {
        position: absolute;
        top: 0;
        right: 0;
        height: 100%;
        width: 320px;
        background-color: #1a1a1a;
        box-shadow: -5px 0 20px rgba(0, 0, 0, 0.6);
        transform: translateX(100%);
        transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        display: flex;
        flex-direction: column;
        padding: 1.5rem;
        color: white;
        text-align: left;
        overflow-y: auto;
        border-left: 1px solid #333;
    }

    .slide-from-right-overlay.is-active .overlay-content {
        transform: translateX(0);
    }

    .slide-from-right-overlay .overlay-close {
        position: absolute;
        top: 1rem;
        right: 1.5rem;
        color: #999;
        cursor: pointer;
        z-index: 1001;
        background: none;
        border: none;
        padding: 0;
        transition: color 0.2s ease-in-out;
    }
    .slide-from-right-overlay .overlay-close:hover {
        color: #fff;
    }
    .slide-from-right-overlay .overlay-close i {
        font-size: 2rem;
    }

    #gridViewOverlay {
        background-color: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
    }

    #gridViewOverlay .modal-content {
        background-color: #1a1a1a;
        padding: 2.5rem;
        border-radius: 1rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.6);
        width: 90%;
        max-width: 450px;
        position: relative;
        transform: translateY(-30px);
        transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.3s ease-out;
        opacity: 0;
        border: 1px solid #333;
    }

    #gridViewOverlay.is-active .modal-content {
        transform: translateY(0);
        opacity: 1;
    }

    #gridViewOverlay .overlay-close {
        position: absolute;
        top: 1rem;
        right: 1rem;
        color: #999;
        cursor: pointer;
        background: none;
        border: none;
        padding: 0;
        transition: color 0.2s ease-in-out;
    }
    #gridViewOverlay .overlay-close:hover {
        color: #fff;
    }
    #gridViewOverlay .overlay-close i {
        font-size: 30px;
    }

    .menu-item {
        padding: 1rem 0.75rem;
        margin-bottom: 0.5rem;
        border-radius: 0.75rem;
        display: flex;
        align-items: center;
        color: #e0e0e0;
        transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
    }
    .menu-item:hover {
        background-color: #2a2a2a;
        color: #ffffff;
    }
    .menu-item i {
        margin-right: 1rem;
        font-size: 1.35rem;
        color: #888;
        transition: color 0.2s ease-in-out;
    }
    .menu-item:hover i {
        color: #007aff;
    }
    .menu-section-title {
        color: #777;
        font-size: 0.85rem;
        font-weight: bold;
        margin-top: 1.8rem;
        margin-bottom: 0.8rem;
        padding-left: 0.75rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }
    #controlCenterOverlay .overlay-content .menu-container {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        width: 100%;
        max-width: none;
        margin-top: 1.5rem;
        margin-bottom: 1rem;
    }

    #controlCenterOverlay .overlay-content .menu-item {
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        padding: 0.8rem 1.2rem;
        background-color: #2a2a2a;
        box-shadow: none;
        border: 1px solid #3a3a3a;
        border-radius: 0.75rem;
    }
    #controlCenterOverlay .overlay-content .menu-item:hover {
        background-color: #3a3a3a;
        transform: none;
        box-shadow: none;
    }
    #controlCenterOverlay .overlay-content .menu-item i {
        margin-right: 1rem;
        margin-bottom: 0;
        font-size: 1.5rem;
        color: #007aff;
    }
    #controlCenterOverlay .overlay-content .menu-item span {
        font-size: 0.95rem;
        font-weight: 500;
        color: #e0e0e0;
    }

    #controlCenterOverlay .overlay-content h2 {
        font-size: 2.2rem;
        margin-bottom: 1.5rem;
        text-align: left;
        padding-left: 0.5rem;
    }

    body.right-panel-active main,
    body.right-panel-active footer,
    body.right-panel-active header {
        transform: translateX(-320px);
        transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1);
    }
    body:not(.right-panel-active) main,
    body:not(.right-panel-active) footer,
    body:not(.right-panel-active) header {
        transform: translateX(0);
        transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1);
    }


    .toggle-switch {
        position: relative;
        display: inline-block;
        width: 48px;
        height: 28px;
    }
    .toggle-switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }
    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #3a3a3a;
        -webkit-transition: .4s;
        transition: .4s;
        border-radius: 28px;
    }
    .slider:before {
        position: absolute;
        content: "";
        height: 20px;
        width: 20px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
        border-radius: 50%;
    }
    input:checked + .slider {
        background-color: #007aff;
    }
    input:focus + .slider {
        box-shadow: 0 0 1px #007aff;
    }
    input:checked + .slider:before {
        -webkit-transform: translateX(20px);
        -ms-transform: translateX(20px);
        transform: translateX(20px);
    }
    .theme-option {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0.6rem 1.2rem;
        border-radius: 0.6rem;
        background-color: #3a3a3a;
        color: #e0e0e0;
        cursor: pointer;
        transition: background-color 0.2s, color 0.2s;
        font-weight: 500;
    }
    .theme-option.selected {
        background-color: #007aff;
        color: #ffffff;
        font-weight: bold;
    }
    .search-history-item, .suggestion-item {
        display: flex;
        align-items: center;
        padding: 0.6rem 1.2rem;
        cursor: pointer;
        border-radius: 0.6rem;
        transition: background-color 0.2s, color 0.2s;
    }
    .search-history-item:hover, .suggestion-item:hover {
        background-color: #2a2a2a;
        color: #ffffff;
    }
    .search-history-item i, .suggestion-item i {
        margin-right: 0.85rem;
        color: #888;
        font-size: 1.1rem;
        transition: color 0.2s;
    }
    .search-history-item:hover i {
        color: #ffffff;
    }
    #languageSelect {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        background-image: url('data:image/svg+xml;utf8,<svg fill="%23e0e0e0" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/></svg>');
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 1.2em;
        padding-right: 2.5rem;
        cursor: pointer;
    }

    .knowledge-card {
        background-color: #2C2C2E;
        border-radius: 1rem;
        padding: 1.5rem;
        margin-left: 2rem;
        width: 380px;
        flex-shrink: 0;
        display: flex;
        flex-direction: column;
        align-self: flex-start;
    }

    .knowledge-card img {
        border-radius: 0.75rem;
        margin-bottom: 1rem;
    }

    .knowledge-card h3 {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 0.75rem;
        color: #FFFFFF;
    }

    .knowledge-card p {
        font-size: 0.95rem;
        color: #E0E0E0;
        line-height: 1.5;
        margin-bottom: 1rem;
    }

    .knowledge-card .source {
        font-size: 0.85rem;
        color: #8E8E93;
        display: flex;
        align-items: center;
    }

    .knowledge-card .source i {
        margin-right: 0.5rem;
        color: #007aff;
    }

    @media (max-width: 1024px) {
        .search-results-wrapper {
            flex-direction: column;
            align-items: center;
        }
        .knowledge-card {
            margin-left: 0;
            margin-top: 2rem;
            width: 90%;
            max-width: 700px;
        }
    }

    .search-bar-container {
        position: relative;
        width: 100%;
        max-width: 700px;
        margin-bottom: 2rem;
    }

    .search-input-wrapper {
        display: flex;
        align-items: center;
        background-color: #2C2C2E;
        border-radius: 9999px;
        padding: 0.5rem 1.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border: 1px solid #3A3A3C;
    }

    .search-input {
        flex-grow: 1;
        background-color: transparent;
        border: none;
        outline: none;
        font-size: 1.125rem;
        color: #E0E0E0;
        padding: 0.5rem 0;
        &::placeholder {
            color: #8E8E93;
        }
    }

    .clear-search-button {
        background: none;
        border: none;
        color: #8E8E93;
        font-size: 1.25rem;
        cursor: pointer;
        padding: 0 0.5rem;
        transition: color 0.2s ease-in-out;
    }
    .clear-search-button:hover {
        color: #FFFFFF;
    }

    .search-separator {
        width: 1px;
        background-color: #3A3A3C;
        height: 1.5rem;
        margin: 0 0.75rem;
    }

    .search-submit-button {
        background: none;
        border: none;
        color: #007AFF;
        font-size: 1.25rem;
        cursor: pointer;
        padding: 0 0.5rem;
        transition: color 0.2s ease-in-out;
    }
    .search-submit-button:hover {
        color: #005BB5;
    }

    .search-options-bar {
        display: flex;
        justify-content: center;
        gap: 1.5rem;
        margin-top: 1rem;
        position: relative;
        padding-bottom: 1px;
        width: 100%;
        max-width: 700px;
    }

    .search-option-item {
        color: #8E8E93;
        font-weight: 500;
        font-size: 0.9rem;
        padding: 0.5rem 0.2rem;
        text-decoration: none;
        transition: color 0.2s ease-in-out;
        position: relative;
        z-index: 10;
    }

    .search-option-item:hover {
        color: #FFFFFF;
    }

    .search-option-item.selected {
        color: #007AFF;
        font-weight: bold;
    }

    #searchResultsAndHistoryContainer {
        position: absolute;
        top: calc(100% + 0.5rem);
        left: 0;
        right: 0;
        background-color: #2C2C2E;
        border-radius: 1rem;
        box-shadow: 0 8px 16px rgba(0,0,0,0.3);
        z-index: 50;
        padding: 1rem;
        border: 1px solid #3A3A3C;
        display: none;
    }

    #searchResultsAndHistoryContainer.active {
        display: block;
    }

    .pagination-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 3rem;
        margin-bottom: 2rem;
        gap: 1rem;
    }

    .pagination-link {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 44px;
        height: 44px;
        border-radius: 50%;
        background-color: #2C2C2E;
        color: #E0E0E0;
        font-size: 1.25rem;
        transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
        text-decoration: none;
    }

    .pagination-link:hover {
        background-color: #3A3A3C;
        color: #007AFF;
    }

    .pagination-link.disabled {
        opacity: 0.5;
        cursor: not-allowed;
        pointer-events: none;
    }

    .pagination-info {
        color: #8E8E93;
        font-size: 1rem;
        white-space: nowrap;
    }

  </style>
 </head>
 <body class="bg-[#000000] text-white min-h-screen flex flex-col">
  <header class="flex justify-between items-center p-4">
    <a href="/" class="text-white font-extrabold text-3xl tracking-tight">Synapic</a>
    <div class="flex space-x-6">
        <button aria-label="Grid view" class="text-white text-xl" id="gridViewButton">
            <i class="fas fa-th-large"></i>
        </button>
        <button aria-label="Menu" class="text-white text-xl" id="menuButton">
            <i class="fas fa-bars"></i>
        </button>
       </div>
  </header>

  <main class="flex-grow flex flex-col items-center px-4 py-8">
    <div class="search-bar-container">
        <form aria-label="Search form" class="w-full" role="search" action="/search" method="GET" id="mainSearchForm">
            <label class="sr-only" for="search-results">
                Search
            </label>
            <div class="search-input-wrapper">
                <input class="search-input"
                       id="search-results" name="query" placeholder="Let's get it ..."
                    type="search" value="<%= query %>"/>
                <button type="button" id="clearSearchButton" class="clear-search-button hidden">
                    <i class="fas fa-times"></i>
                </button>
                <div class="search-separator"></div>
                <button aria-label="Search" class="search-submit-button"
                    type="submit">
                    <i class="fas fa-search"></i>
                </button>
            </div>
            <input type="hidden" name="lang" id="mainSearchLang" value="<%= lang %>">
            <input type="hidden" name="page" id="mainSearchPage" value="<%= currentPage %>"> </form>

        <div id="searchResultsAndHistoryContainer" class="absolute top-full left-0 w-full">
            <div id="searchHistoryContainer" class="p-4">
                <h3 class="text-sm font-bold text-[#8E8E93] mb-2">Recent Searches</h3>
                <div id="recentSearchesList" class="space-y-2">
                </div>
            </div>
        </div>
    </div>

    <div class="search-options-bar" id="searchOptionsBar">
        <a href="/search?query=<%= encodeURIComponent(query) %>&type=web&lang=<%= lang %>"
class="search-option-item <%= type === 'web' ?
'selected' : '' %>" data-type="web">Web</a>
        <a href="/search?query=<%= encodeURIComponent(query) %>&type=image&lang=<%= lang %>" class="search-option-item <%= type === 'image' ?
'selected' : '' %>" data-type="image">Images</a>
        <a href="/search?query=<%= encodeURIComponent(query) %>&type=video&lang=<%= lang %>" class="search-option-item <%= type === 'video' ?
'selected' : '' %>" data-type="video">Videos</a>
        <a href="/search?query=<%= encodeURIComponent(query) %>&type=news&lang=<%= lang %>" class="search-option-item <%= type === 'news' ?
'selected' : '' %>" data-type="news">News</a>
        <a href="/search?query=<%= encodeURIComponent(query) %>&type=wiki&lang=<%= lang %>" class="search-option-item <%= type === 'wiki' ?
'selected' : '' %>" data-type="wiki">Wikipedia</a>
    </div>

    <% if (errorMessage) { %>
        <div class="bg-red-800 text-white p-4 rounded-lg w-full max-w-[700px] mb-6 mx-auto">
            <p>Error: <%= errorMessage %></p>
            <p>Please try again later or use a different search query.</p>
        </div>
    <% } %>

    <div class="flex w-full max-w-[1100px] justify-center search-results-wrapper mt-8">
        <div class="flex-grow space-y-6 max-w-[700px] mx-auto">
            <% if (type === 'web' && results.length > 0) { %>
                <% results.forEach(result => { %>
                    <div class="bg-[#2C2C2E] p-4 rounded-lg shadow-lg search-result-item">
                        <a href="<%= result.link %>"
target="_blank" rel="noopener noreferrer" class="text-[#8E8E93] text-sm block mb-1 result-link flex items-center">
                        <%
                                let domain = '';
                                try {
                                    const urlObj = new URL(result.link);
                                    domain = urlObj.hostname;
                                } catch (e) {
                                    domain = result.displayUrl;
                                }
                                const faviconUrl = `https://www.google.com/s2/favicons?domain=${encodeURIComponent(domain)}&sz=16`;
                        %>
                            <img src="<%= faviconUrl %>" class="inline-block w-4 h-4 mr-1 -mt-0.5" alt="Site icon" onerror="this.onerror=null;this.src='data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' fill=\'currentColor\' viewBox=\'0 0 20 20\'%3E%3Cpath fill-rule=\'evenodd\' d=\'M10 18a8 8 0 100-16 8 8 0 000 16zM5 9a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z\' clip-rule=\'evenodd\'%3E%3C/path%3E%3C/svg%3E'; this.classList.add('text-[#8E8E93]'); this.classList.remove('w-4', 'h-4'); this.style.width='16px'; this.style.height='16px';">
                            <%= result.displayUrl %>
                        </a>
                        <h2 class="text-xl font-bold text-white mb-2">
                            <a href="<%= result.link %>" target="_blank" rel="noopener noreferrer" class="hover:underline">
                                <%= result.title %>
                            </a>
                        </h2>
                        <p class="text-[#E0E0E0] text-sm leading-relaxed"><%= result.snippet %></p>
                    </div>
                <% });
            %>
            <% } else if (type === 'image' && images.length > 0) { %>
                <div class="w-full">
                    <h2 class="text-xl font-bold
text-white mb-4 text-center">Image Results</h2>
                    <div class="bg-[#2C2C2E] p-4 rounded-lg shadow-lg"> <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-5 justify-items-center">
                            <% images.forEach(image => { %>
                                <div class="bg-[#1a1a1a] p-2 rounded-lg shadow-md flex flex-col items-center cursor-pointer image-card aspect-square w-full"
                                     data-full-image-url="<%= image.image %>"
                                     data-image-link="<%= image.link %>"
                                     data-image-title="<%= image.title %>">
                                    <div class="h-full w-full overflow-hidden rounded-lg mb-2">
                                        <img src="<%= image.thumbnail || image.image %>" alt="<%= image.title %>" class="w-full h-full object-cover transform hover:scale-105 transition-transform duration-200">
                                    </div>
                                    <div class="text-xs text-[#E0E0E0] truncate w-full text-center px-1">
                                        <%= image.title %>
                                    </div>
                                </div>
                            <% });
                %>
                        </div>
                    </div>
                </div>
            <% } else if (type === 'video' && videos.length > 0) { %>
                <div class="w-full">
                    <h2 class="text-xl font-bold
text-white mb-4 text-center">Video Results</h2>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 justify-items-center">
                        <% videos.forEach(video => { %>
                            <div class="bg-[#2C2C2E] rounded-lg overflow-hidden shadow-lg search-result-item">
                                <a href="<%= video.url %>" target="_blank" rel="noopener noreferrer" class="block">
                                    <img src="<%= video.thumbnail %>" alt="<%= video.title %>" class="w-full h-40 object-cover">
                                </a>
                                <div class="p-3">
                                    <h3 class="text-lg font-semibold text-white mb-1">
                                        <a href="<%= video.url %>" target="_blank" rel="noopener noreferrer" class="hover:underline">
                                            <%= video.title %>
                                        </a>
                                    </h3>
                                    <p class="text-[#8E8E93] text-sm"><%= video.source %></p>
                                </div>
                            </div>
                        <% });
            %>
                    </div>
                </div>
            <% } else if (type === 'news' && newsResults.length > 0) { %>
                <div class="w-full">
                    <h2 class="text-xl font-bold
text-white mb-4 text-center">News Results</h2>
                    <div class="space-y-6">
                        <% newsResults.forEach(news => { %>
                            <div class="bg-[#2C2C2E] p-4 rounded-lg shadow-lg flex flex-col sm:flex-row items-start space-y-3 sm:space-y-0 sm:space-x-4 search-result-item">
                                <% if (news.image) { %>
                                    <img src="<%= news.image %>" alt="<%= news.title %>" class="w-full sm:w-32 h-24 object-cover rounded-md flex-shrink-0">
                                <% } %>
                                <div class="flex-grow">
                                    <h3 class="text-lg font-semibold text-white mb-1">
                                        <a href="<%= news.link %>" target="_blank" rel="noopener noreferrer" class="hover:underline">
                                            <%= news.title %>
                                        </a>
                                    </h3>
                                    <p class="text-[#E0E0E0] text-sm mb-2"><%= news.snippet %></p>
                                    <div class="text-[#8E8E93] text-xs">
                                        <span><%= news.source %></span>
                                        <% if (news.date) { %>
                                            <span class="ml-2">| <%= new Date(news.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></span>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% });
            %>
                    </div>
                </div>
            <% } else if (type === 'wiki') { %>
                <% if (wiki && wiki.summary) { %>
                    <div class="bg-[#2C2C2E] p-6 rounded-lg shadow-lg mx-auto w-full max-w-[700px]">
                        <% if (wiki.image || wiki.thumbnail) { %>
                            <img src="<%= wiki.image || wiki.thumbnail %>" alt="<%= wiki.title %>" class="w-full h-48 object-cover rounded-md mb-4">
                        <% } %>
                        <h2 class="text-2xl font-bold text-white mb-2">
                            <a href="<%= wiki.url %>" target="_blank" rel="noopener noreferrer" class="hover:underline">
                                <%= wiki.title %>
                            </a>
                        </h2>
                        <p class="text-[#E0E0E0] text-sm leading-relaxed mb-4"><%= wiki.summary %></p>
                        <a href="<%= wiki.url %>" target="_blank" rel="noopener noreferrer" class="text-[#8E8E93] text-xs hover:underline"> Source: Wikipedia </a>
                    </div>
                <% } else { %>
                    <div class="w-full text-center text-[#8E8E93] py-8">
                        <p class="text-lg mb-2">No Wikipedia result found for "<%= query %>".</p>
                        <p>Please try a different search term.</p>
                    </div>
                <% } %>
            <% } else { %>
                <div class="w-full text-center text-[#8E8E93] py-8">
                    <p class="text-lg mb-2">No results found for "<%= query %>" in this category.</p>
                    <p>Please try a different search term or search category.</p>
                </div>
            <% } %>
        </div>
    </div>

    <%
        const showPagination = ['web', 'image', 'video', 'news'].includes(type) && totalPages > 1;
        if (showPagination) {
            const prevPage = currentPage - 1;
            const nextPage = currentPage + 1;
            const prevLink = `/search?query=${encodeURIComponent(query)}&type=${type}&lang=${lang}&page=${prevPage}`;
            const nextLink = `/search?query=${encodeURIComponent(query)}&type=${type}&lang=${lang}&page=${nextPage}`;
    %>
    <div class="pagination-container">
        <a href="<%= prevLink %>" class="pagination-link <%= currentPage === 1 ? 'disabled' : '' %>" aria-label="Previous Page">
            <i class="fas fa-arrow-left"></i>
        </a>
        <span class="pagination-info">Page <%= currentPage %> of <%= totalPages %></span>
        <a href="<%= nextLink %>" class="pagination-link <%= currentPage === totalPages ? 'disabled' : '' %>" aria-label="Next Page">
            <i class="fas fa-arrow-right"></i>
        </a>
    </div>
    <% } %>

  </main>

  <div id="imageModalOverlay" class="overlay">
    <button class="overlay-close" id="closeImageModalButton" aria-label="Close">
        <i class="fas fa-times"></i>
    </button>
    <div class="modal-content bg-[#1a1a1a] p-6 rounded-lg shadow-xl text-center flex flex-col items-center max-w-xl w-11/12">
        <img id="modalImage" src="" alt="Enlarged Image" class="max-w-full max-h-[70vh] object-contain rounded-lg mb-4">
        <h3 id="modalImageTitle" class="text-white text-lg font-semibold mb-2"></h3>
        <a id="modalImageLink" href="#" target="_blank" rel="noopener noreferrer" class="px-4 py-2 bg-[#007aff] text-white rounded-full hover:bg-[#005bb5] transition-colors duration-200">Go to Image</a>
    </div>
  </div>

  <div id="controlCenterOverlay" class="overlay">
    <button class="overlay-close" id="closeControlCenterButton" aria-label="Close">
      <i class="fas fa-xmark"></i>
    </button>
    <div class="overlay-content">
      <h2 class="text-2xl font-bold mb-6 text-white">Control Center</h2>
      <div class="menu-container">
        <a href="#" class="menu-item" id="searchOptionsButton">
          <i class="fas fa-gear"></i>
          <span>Search Options</span>
        </a>
        <a href="/past" class="menu-item">
          <i class="fa-solid fa-clock-rotate-left"></i>
          <span>Search History</span>
        </a>
        <a href="/privacy" class="menu-item">
          <i class="fa-solid fa-lock"></i>
          <span>Privacy & Terms</span>
        </a>
      </div>
    </div>
  </div>
  <div id="searchOptionsOverlay" class="overlay slide-from-right-overlay">
    <button class="overlay-close" id="closeSearchOptionsButton" aria-label="Close">
      <i class="fas fa-times"></i>
    </button>
    <div class="overlay-content">
      <h2 class="text-2xl font-bold mb-6 text-white">Search Options</h2>
      <div class="space-y-4 text-xl">
        <div class="flex items-center justify-between menu-item">
          <label for="locationBased" class="text-white">Location-Based Results</label>
          <label class="toggle-switch">
            <input type="checkbox" id="locationBased">
            <span class="slider"></span>
          </label>
        </div>
        <div class="flex items-center justify-between menu-item">
          <label for="languageSelect" class="text-white">Language:</label>
          <select id="languageSelect" class="bg-[#2C2C2E] text-white p-2 rounded">
            <option value="tr">Turkish</option>
            <option value="en">English</option>
            <option value="de">Deutsch</option>
          </select>
        </div>
        <button class="mt-6 px-6 py-3 bg-[#007aff] text-white rounded-full hover:bg-[#005bb5] transition-colors duration-200 font-bold w-full" id="saveSearchOptions"> Save Settings </button>
      </div>
    </div>
  </div>
  <div id="gridViewOverlay" class="overlay">
    <button class="overlay-close" id="closeGridViewButton" aria-label="Close">
      <i class="fas fa-times"></i>
    </button>
    <div class="modal-content">
      <h2 class="text-3xl font-bold mb-6 text-white text-center">Quick Search</h2>
      <form aria-label="Quick search form" class="w-full mb-6" action="/search" method="GET">
        <div class="relative mb-4">
          <input class="w-full rounded-full bg-[#18181B] text-[#e0e0e0] placeholder-[#8e8e93] py-3 pl-6 pr-12 text-base focus:outline-none focus:ring-1 focus:ring-[#007aff] focus:bg-[#2a2a2a]" id="quickSearchInput"
name="query" placeholder="Search..." type="search"/>
          <button aria-label="Quick Search Submit" class="absolute right-4 top-1/2 -translate-y-1/2 text-[#999] hover:text-white" type="submit">
            <i class="fas fa-magnifying-glass"></i>
          </button>
        </div>
        <input type="hidden" id="quickSearchType" name="type" value="web">
        <input type="hidden" name="lang" id="quickSearchLang" value="en">
      </form>
      <nav class="flex flex-col space-y-3 text-lg">
        <a href="#" data-type="web" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-[#2a2a2a] transition-colors duration-200 quick-search-type-link">
          <i class="fas fa-globe text-[#007aff]"></i>
          <span class="text-white">Search Web</span>
        </a>
        <a href="#" data-type="image" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-[#2a2a2a] transition-colors duration-200 quick-search-type-link">
          <i class="fas fa-image text-[#007aff]"></i>
          <span class="text-white">Search Images</span>
        </a>
        <a href="#" data-type="news" class="flex items-center space-x-3 p-3 rounded-lg hover:bg-[#2a2a2a] transition-colors duration-200 quick-search-type-link">
          <i class="fas fa-newspaper text-[#007aff]"></i>
          <span class="text-white">Search News</span>
        </a>
        <a href="#" data-type="wiki" class="flex items-center
space-x-3 p-3 rounded-lg hover:bg-[#2a2a2a] transition-colors duration-200 quick-search-type-link">
          <i class="fas fa-wikipedia-w text-[#007aff]"></i>
          <span class="text-white">Search Wikipedia</span>
        </a>
      </nav>
    </div>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
        const searchInput = document.getElementById('search-results');
        const clearButton = document.getElementById('clearSearchButton');
        const mainSearchForm = document.getElementById('mainSearchForm');
        const mainSearchLang = document.getElementById('mainSearchLang');
        const mainSearchPage = document.getElementById('mainSearchPage');

        const searchResultsAndHistoryContainer = document.getElementById('searchResultsAndHistoryContainer');
        const searchHistoryContainer = document.getElementById('searchHistoryContainer');
        const recentSearchesList = document.getElementById('recentSearchesList');

        let searchHistory = JSON.parse(localStorage.getItem('searchHistory')) || [];

        function toggleClearButton() {
            if (searchInput.value.length > 0) {
                clearButton.classList.remove('hidden');
            } else {
                clearButton.classList.add('hidden');
            }
        }

        function saveSearchQuery(query) {
            if (query.trim() !== '' && !searchHistory.includes(query)) {
                searchHistory.unshift(query);
                searchHistory = searchHistory.slice(0, 5);
                localStorage.setItem('searchHistory', JSON.stringify(searchHistory));
            }
        }

        function displayRecentSearches() {
            recentSearchesList.innerHTML = '';

            if (searchHistory.length > 0) {
                searchHistory.forEach(item => {
                    const historyItem = document.createElement('div');
                    historyItem.classList.add('search-history-item', 'flex', 'items-center', 'py-2', 'px-3', 'rounded', 'hover:bg-[#3A3A3C]', 'cursor-pointer', 'text-[#E0E0E0]');
                    historyItem.innerHTML = `<i class="fas fa-history mr-2 text-[#8E8E93]"></i> <span>${item}</span>`;
                    historyItem.addEventListener('click', () => {
                        searchInput.value = item;
                        mainSearchPage.value = '1'; 
                        mainSearchForm.submit();
                    });
                    recentSearchesList.appendChild(historyItem);
                });
                searchResultsAndHistoryContainer.classList.add('active');
                searchHistoryContainer.classList.remove('hidden');
            } else {
                searchResultsAndHistoryContainer.classList.remove('active');
                searchHistoryContainer.classList.add('hidden');
            }
        }

        searchInput.addEventListener('input', () => {
            toggleClearButton();
            searchResultsAndHistoryContainer.classList.remove('active');
            searchHistoryContainer.classList.add('hidden');
        });

        clearButton.addEventListener('click', () => {
            searchInput.value = '';
            toggleClearButton();
            searchInput.focus();
            displayRecentSearches();
        });

        mainSearchForm.addEventListener('submit', (event) => {
            saveSearchQuery(searchInput.value);
            if (event.submitter && event.submitter.type === 'submit' && event.submitter.id === 'search-results') {
                 mainSearchPage.value = '1';
            }
        });

        searchInput.addEventListener('focus', () => {
            displayRecentSearches();
        });

        searchInput.addEventListener('blur', (event) => {
            setTimeout(() => {
                if (!searchResultsAndHistoryContainer.contains(event.relatedTarget)) {
                    searchResultsAndHistoryContainer.classList.remove('active');
                    searchHistoryContainer.classList.add('hidden');
                }
            }, 100);
        });

        const menuButton = document.getElementById('menuButton');
        const controlCenterOverlay = document.getElementById('controlCenterOverlay');
        const closeControlCenterButton = document.getElementById('closeControlCenterButton');
        const searchOptionsButton = document.getElementById('searchOptionsButton');
        const searchOptionsOverlay = document.getElementById('searchOptionsOverlay');
        const closeSearchOptionsButton = document.getElementById('closeSearchOptionsButton');
        const gridViewButton = document.getElementById('gridViewButton');
        const gridViewOverlay = document.getElementById('gridViewOverlay');
        const closeGridViewButton = document.getElementById('closeGridViewButton');

        const imageModalOverlay = document.getElementById('imageModalOverlay');
        const closeImageModalButton = document.getElementById('closeImageModalButton');
        const modalImage = document.getElementById('modalImage');
        const modalImageLink = document.getElementById('modalImageLink');
        const modalImageTitle = document.getElementById('modalImageTitle');


        function openOverlay(overlay) {
            overlay.classList.add('is-active');
            if (overlay === controlCenterOverlay || overlay === searchOptionsOverlay) {
                document.body.classList.add('right-panel-active');
            }
        }

        function closeOverlay(overlay) {
            overlay.classList.remove('is-active');
            if (overlay === controlCenterOverlay || overlay === searchOptionsOverlay) {
                document.body.classList.remove('right-panel-active');
            }
        }

        menuButton.addEventListener('click', () => openOverlay(controlCenterOverlay));
        closeControlCenterButton.addEventListener('click', () => closeOverlay(controlCenterOverlay));

        if (searchOptionsButton) {
            searchOptionsButton.addEventListener('click', (e) => {
                e.preventDefault();
                closeOverlay(controlCenterOverlay);
                setTimeout(() => {
                    openOverlay(searchOptionsOverlay);
                }, 100);
            });
        }
        closeSearchOptionsButton.addEventListener('click', () => closeOverlay(searchOptionsOverlay));

        gridViewButton.addEventListener('click', () => openOverlay(gridViewOverlay));
        closeGridViewButton.addEventListener('click', () => closeOverlay(gridViewOverlay));

        controlCenterOverlay.addEventListener('click', (e) => {
            if (e.target === controlCenterOverlay) {
                closeOverlay(controlCenterOverlay);
            }
        });
        searchOptionsOverlay.addEventListener('click', (e) => {
            if (e.target === searchOptionsOverlay) {
                closeOverlay(searchOptionsOverlay);
            }
        });
        gridViewOverlay.addEventListener('click', (e) => {
            if (e.target === gridViewOverlay) {
                closeOverlay(gridViewOverlay);
            }
        });

        document.querySelectorAll('.image-card').forEach(card => {
            card.addEventListener('click', () => {
                const fullImageUrl = card.getAttribute('data-full-image-url');
                const imageLink = card.getAttribute('data-image-link');
                const imageTitle = card.getAttribute('data-image-title');

                modalImage.src = fullImageUrl;
                modalImageLink.href = imageLink;
                modalImageTitle.textContent = imageTitle;

                imageModalOverlay.classList.add('is-active');
            });
        });

        closeImageModalButton.addEventListener('click', () => {
            imageModalOverlay.classList.remove('is-active');
        });

        imageModalOverlay.addEventListener('click', (e) => {
            if (e.target === imageModalOverlay) {
                imageModalOverlay.classList.remove('is-active');
            }
        });


        document.querySelectorAll('.quick-search-type-link').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const type = this.getAttribute('data-type');
                document.getElementById('quickSearchType').value = type;
                document.querySelector('#gridViewOverlay form').submit();
            });
        });

        const locationBasedToggle = document.getElementById('locationBased');
        function loadLocationBasedSetting() {
            const setting = localStorage.getItem('synapicLocationBased');
            if (setting === 'true') {
                locationBasedToggle.checked = true;
            } else {
                locationBasedToggle.checked = false;
            }
        }

        const languageSelect = document.getElementById('languageSelect');
        function loadLanguageSetting() {
            const savedLang = localStorage.getItem('synapicSearchLang');
            if (savedLang) {
                languageSelect
